#ifndef SCHEMA_BUILDER_H
#define SCHEMA_BUILDER_H

/* Generated by flatcc 0.6.0-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef SCHEMA_READER_H
#include "schema_reader.h"
#endif
#ifndef FLATBUFFERS_COMMON_BUILDER_H
#include "flatbuffers_common_builder.h"
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif

#define __MnistProt_Command_formal_args , MnistProt_Command_enum_t v0
#define __MnistProt_Command_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, MnistProt_Command, MnistProt_Command_enum_t)
#define __MnistProt_Mode_formal_args , MnistProt_Mode_enum_t v0
#define __MnistProt_Mode_call_args , v0
__flatbuffers_build_scalar(flatbuffers_, MnistProt_Mode, MnistProt_Mode_enum_t)

static const flatbuffers_voffset_t __MnistProt_Stats_required[] = { 0 };
typedef flatbuffers_ref_t MnistProt_Stats_ref_t;
static MnistProt_Stats_ref_t MnistProt_Stats_clone(flatbuffers_builder_t *B, MnistProt_Stats_table_t t);
__flatbuffers_build_table(flatbuffers_, MnistProt_Stats, 3)

static const flatbuffers_voffset_t __MnistProt_InferenceInput_required[] = { 0 };
typedef flatbuffers_ref_t MnistProt_InferenceInput_ref_t;
static MnistProt_InferenceInput_ref_t MnistProt_InferenceInput_clone(flatbuffers_builder_t *B, MnistProt_InferenceInput_table_t t);
__flatbuffers_build_table(flatbuffers_, MnistProt_InferenceInput, 1)

static const flatbuffers_voffset_t __MnistProt_InferenceOutput_required[] = { 0 };
typedef flatbuffers_ref_t MnistProt_InferenceOutput_ref_t;
static MnistProt_InferenceOutput_ref_t MnistProt_InferenceOutput_clone(flatbuffers_builder_t *B, MnistProt_InferenceOutput_table_t t);
__flatbuffers_build_table(flatbuffers_, MnistProt_InferenceOutput, 3)

static const flatbuffers_voffset_t __MnistProt_Commands_required[] = { 0 };
typedef flatbuffers_ref_t MnistProt_Commands_ref_t;
static MnistProt_Commands_ref_t MnistProt_Commands_clone(flatbuffers_builder_t *B, MnistProt_Commands_table_t t);
__flatbuffers_build_table(flatbuffers_, MnistProt_Commands, 4)

#define __MnistProt_Stats_formal_args , uint8_t v0, uint32_t v1, MnistProt_Mode_enum_t v2
#define __MnistProt_Stats_call_args , v0, v1, v2
static inline MnistProt_Stats_ref_t MnistProt_Stats_create(flatbuffers_builder_t *B __MnistProt_Stats_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, MnistProt_Stats, MnistProt_Stats_identifier, MnistProt_Stats_type_identifier)

#define __MnistProt_InferenceInput_formal_args , flatbuffers_float_vec_ref_t v0
#define __MnistProt_InferenceInput_call_args , v0
static inline MnistProt_InferenceInput_ref_t MnistProt_InferenceInput_create(flatbuffers_builder_t *B __MnistProt_InferenceInput_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, MnistProt_InferenceInput, MnistProt_InferenceInput_identifier, MnistProt_InferenceInput_type_identifier)

#define __MnistProt_InferenceOutput_formal_args , flatbuffers_float_vec_ref_t v0, uint8_t v1, float v2
#define __MnistProt_InferenceOutput_call_args , v0, v1, v2
static inline MnistProt_InferenceOutput_ref_t MnistProt_InferenceOutput_create(flatbuffers_builder_t *B __MnistProt_InferenceOutput_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, MnistProt_InferenceOutput, MnistProt_InferenceOutput_identifier, MnistProt_InferenceOutput_type_identifier)

#define __MnistProt_Commands_formal_args , MnistProt_Command_enum_t v0, MnistProt_Stats_ref_t v1, MnistProt_InferenceInput_ref_t v2, MnistProt_InferenceOutput_ref_t v3
#define __MnistProt_Commands_call_args , v0, v1, v2, v3
static inline MnistProt_Commands_ref_t MnistProt_Commands_create(flatbuffers_builder_t *B __MnistProt_Commands_formal_args);
__flatbuffers_build_table_prolog(flatbuffers_, MnistProt_Commands, MnistProt_Commands_identifier, MnistProt_Commands_type_identifier)

__flatbuffers_build_scalar_field(0, flatbuffers_, MnistProt_Stats_version, flatbuffers_uint8, uint8_t, 1, 1, UINT8_C(0), MnistProt_Stats)
__flatbuffers_build_scalar_field(1, flatbuffers_, MnistProt_Stats_freq, flatbuffers_uint32, uint32_t, 4, 4, UINT32_C(0), MnistProt_Stats)
__flatbuffers_build_scalar_field(2, flatbuffers_, MnistProt_Stats_mode, MnistProt_Mode, MnistProt_Mode_enum_t, 1, 1, INT8_C(0), MnistProt_Stats)

static inline MnistProt_Stats_ref_t MnistProt_Stats_create(flatbuffers_builder_t *B __MnistProt_Stats_formal_args)
{
    if (MnistProt_Stats_start(B)
        || MnistProt_Stats_freq_add(B, v1)
        || MnistProt_Stats_version_add(B, v0)
        || MnistProt_Stats_mode_add(B, v2)) {
        return 0;
    }
    return MnistProt_Stats_end(B);
}

static MnistProt_Stats_ref_t MnistProt_Stats_clone(flatbuffers_builder_t *B, MnistProt_Stats_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (MnistProt_Stats_start(B)
        || MnistProt_Stats_freq_pick(B, t)
        || MnistProt_Stats_version_pick(B, t)
        || MnistProt_Stats_mode_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, MnistProt_Stats_end(B));
}

__flatbuffers_build_vector_field(0, flatbuffers_, MnistProt_InferenceInput_digit, flatbuffers_float, float, MnistProt_InferenceInput)

static inline MnistProt_InferenceInput_ref_t MnistProt_InferenceInput_create(flatbuffers_builder_t *B __MnistProt_InferenceInput_formal_args)
{
    if (MnistProt_InferenceInput_start(B)
        || MnistProt_InferenceInput_digit_add(B, v0)) {
        return 0;
    }
    return MnistProt_InferenceInput_end(B);
}

static MnistProt_InferenceInput_ref_t MnistProt_InferenceInput_clone(flatbuffers_builder_t *B, MnistProt_InferenceInput_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (MnistProt_InferenceInput_start(B)
        || MnistProt_InferenceInput_digit_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, MnistProt_InferenceInput_end(B));
}

__flatbuffers_build_vector_field(0, flatbuffers_, MnistProt_InferenceOutput_output_f, flatbuffers_float, float, MnistProt_InferenceOutput)
__flatbuffers_build_scalar_field(1, flatbuffers_, MnistProt_InferenceOutput_output_n, flatbuffers_uint8, uint8_t, 1, 1, UINT8_C(0), MnistProt_InferenceOutput)
__flatbuffers_build_scalar_field(2, flatbuffers_, MnistProt_InferenceOutput_timer_ms, flatbuffers_float, float, 4, 4, 0.000000f, MnistProt_InferenceOutput)

static inline MnistProt_InferenceOutput_ref_t MnistProt_InferenceOutput_create(flatbuffers_builder_t *B __MnistProt_InferenceOutput_formal_args)
{
    if (MnistProt_InferenceOutput_start(B)
        || MnistProt_InferenceOutput_output_f_add(B, v0)
        || MnistProt_InferenceOutput_timer_ms_add(B, v2)
        || MnistProt_InferenceOutput_output_n_add(B, v1)) {
        return 0;
    }
    return MnistProt_InferenceOutput_end(B);
}

static MnistProt_InferenceOutput_ref_t MnistProt_InferenceOutput_clone(flatbuffers_builder_t *B, MnistProt_InferenceOutput_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (MnistProt_InferenceOutput_start(B)
        || MnistProt_InferenceOutput_output_f_pick(B, t)
        || MnistProt_InferenceOutput_timer_ms_pick(B, t)
        || MnistProt_InferenceOutput_output_n_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, MnistProt_InferenceOutput_end(B));
}

__flatbuffers_build_scalar_field(0, flatbuffers_, MnistProt_Commands_cmd, MnistProt_Command, MnistProt_Command_enum_t, 1, 1, INT8_C(0), MnistProt_Commands)
__flatbuffers_build_table_field(1, flatbuffers_, MnistProt_Commands_stats, MnistProt_Stats, MnistProt_Commands)
__flatbuffers_build_table_field(2, flatbuffers_, MnistProt_Commands_input, MnistProt_InferenceInput, MnistProt_Commands)
__flatbuffers_build_table_field(3, flatbuffers_, MnistProt_Commands_ouput, MnistProt_InferenceOutput, MnistProt_Commands)

static inline MnistProt_Commands_ref_t MnistProt_Commands_create(flatbuffers_builder_t *B __MnistProt_Commands_formal_args)
{
    if (MnistProt_Commands_start(B)
        || MnistProt_Commands_stats_add(B, v1)
        || MnistProt_Commands_input_add(B, v2)
        || MnistProt_Commands_ouput_add(B, v3)
        || MnistProt_Commands_cmd_add(B, v0)) {
        return 0;
    }
    return MnistProt_Commands_end(B);
}

static MnistProt_Commands_ref_t MnistProt_Commands_clone(flatbuffers_builder_t *B, MnistProt_Commands_table_t t)
{
    __flatbuffers_memoize_begin(B, t);
    if (MnistProt_Commands_start(B)
        || MnistProt_Commands_stats_pick(B, t)
        || MnistProt_Commands_input_pick(B, t)
        || MnistProt_Commands_ouput_pick(B, t)
        || MnistProt_Commands_cmd_pick(B, t)) {
        return 0;
    }
    __flatbuffers_memoize_end(B, t, MnistProt_Commands_end(B));
}

#include "flatcc/flatcc_epilogue.h"
#endif /* SCHEMA_BUILDER_H */
