#ifndef SCHEMA_READER_H
#define SCHEMA_READER_H

/* Generated by flatcc 0.6.0-pre FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension ".bin"
#endif


typedef const struct MnistProt_Stats_table *MnistProt_Stats_table_t;
typedef struct MnistProt_Stats_table *MnistProt_Stats_mutable_table_t;
typedef const flatbuffers_uoffset_t *MnistProt_Stats_vec_t;
typedef flatbuffers_uoffset_t *MnistProt_Stats_mutable_vec_t;
typedef const struct MnistProt_InferenceInput_table *MnistProt_InferenceInput_table_t;
typedef struct MnistProt_InferenceInput_table *MnistProt_InferenceInput_mutable_table_t;
typedef const flatbuffers_uoffset_t *MnistProt_InferenceInput_vec_t;
typedef flatbuffers_uoffset_t *MnistProt_InferenceInput_mutable_vec_t;
typedef const struct MnistProt_InferenceOutput_table *MnistProt_InferenceOutput_table_t;
typedef struct MnistProt_InferenceOutput_table *MnistProt_InferenceOutput_mutable_table_t;
typedef const flatbuffers_uoffset_t *MnistProt_InferenceOutput_vec_t;
typedef flatbuffers_uoffset_t *MnistProt_InferenceOutput_mutable_vec_t;
typedef const struct MnistProt_Commands_table *MnistProt_Commands_table_t;
typedef struct MnistProt_Commands_table *MnistProt_Commands_mutable_table_t;
typedef const flatbuffers_uoffset_t *MnistProt_Commands_vec_t;
typedef flatbuffers_uoffset_t *MnistProt_Commands_mutable_vec_t;
#ifndef MnistProt_Stats_identifier
#define MnistProt_Stats_identifier flatbuffers_identifier
#endif
#define MnistProt_Stats_type_hash ((flatbuffers_thash_t)0x27962092)
#define MnistProt_Stats_type_identifier "\x92\x20\x96\x27"
#ifndef MnistProt_InferenceInput_identifier
#define MnistProt_InferenceInput_identifier flatbuffers_identifier
#endif
#define MnistProt_InferenceInput_type_hash ((flatbuffers_thash_t)0xaa053b62)
#define MnistProt_InferenceInput_type_identifier "\x62\x3b\x05\xaa"
#ifndef MnistProt_InferenceOutput_identifier
#define MnistProt_InferenceOutput_identifier flatbuffers_identifier
#endif
#define MnistProt_InferenceOutput_type_hash ((flatbuffers_thash_t)0x957339b7)
#define MnistProt_InferenceOutput_type_identifier "\xb7\x39\x73\x95"
#ifndef MnistProt_Commands_identifier
#define MnistProt_Commands_identifier flatbuffers_identifier
#endif
#define MnistProt_Commands_type_hash ((flatbuffers_thash_t)0xb55206dd)
#define MnistProt_Commands_type_identifier "\xdd\x06\x52\xb5"

typedef int8_t MnistProt_Command_enum_t;
__flatbuffers_define_integer_type(MnistProt_Command, MnistProt_Command_enum_t, 8)
#define MnistProt_Command_CMD_GET_STATS ((MnistProt_Command_enum_t)INT8_C(0))
#define MnistProt_Command_CMD_INFERENCE_INPUT ((MnistProt_Command_enum_t)INT8_C(1))
#define MnistProt_Command_CMD_INFERENCE_OUTPUT ((MnistProt_Command_enum_t)INT8_C(2))

static inline const char *MnistProt_Command_name(MnistProt_Command_enum_t value)
{
    switch (value) {
    case MnistProt_Command_CMD_GET_STATS: return "CMD_GET_STATS";
    case MnistProt_Command_CMD_INFERENCE_INPUT: return "CMD_INFERENCE_INPUT";
    case MnistProt_Command_CMD_INFERENCE_OUTPUT: return "CMD_INFERENCE_OUTPUT";
    default: return "";
    }
}

static inline int MnistProt_Command_is_known_value(MnistProt_Command_enum_t value)
{
    switch (value) {
    case MnistProt_Command_CMD_GET_STATS: return 1;
    case MnistProt_Command_CMD_INFERENCE_INPUT: return 1;
    case MnistProt_Command_CMD_INFERENCE_OUTPUT: return 1;
    default: return 0;
    }
}

typedef int8_t MnistProt_Mode_enum_t;
__flatbuffers_define_integer_type(MnistProt_Mode, MnistProt_Mode_enum_t, 8)
#define MnistProt_Mode_ACCELERATION_NONE ((MnistProt_Mode_enum_t)INT8_C(0))
#define MnistProt_Mode_ACCELERATION_CMSIS_NN ((MnistProt_Mode_enum_t)INT8_C(1))

static inline const char *MnistProt_Mode_name(MnistProt_Mode_enum_t value)
{
    switch (value) {
    case MnistProt_Mode_ACCELERATION_NONE: return "ACCELERATION_NONE";
    case MnistProt_Mode_ACCELERATION_CMSIS_NN: return "ACCELERATION_CMSIS_NN";
    default: return "";
    }
}

static inline int MnistProt_Mode_is_known_value(MnistProt_Mode_enum_t value)
{
    switch (value) {
    case MnistProt_Mode_ACCELERATION_NONE: return 1;
    case MnistProt_Mode_ACCELERATION_CMSIS_NN: return 1;
    default: return 0;
    }
}



struct MnistProt_Stats_table { uint8_t unused__; };

static inline size_t MnistProt_Stats_vec_len(MnistProt_Stats_vec_t vec)
__flatbuffers_vec_len(vec)
static inline MnistProt_Stats_table_t MnistProt_Stats_vec_at(MnistProt_Stats_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(MnistProt_Stats_table_t, vec, i, 0)
__flatbuffers_table_as_root(MnistProt_Stats)

__flatbuffers_define_scalar_field(0, MnistProt_Stats, version, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_scalar_field(1, MnistProt_Stats, freq, flatbuffers_uint32, uint32_t, UINT32_C(0))
__flatbuffers_define_scalar_field(2, MnistProt_Stats, mode, MnistProt_Mode, MnistProt_Mode_enum_t, INT8_C(0))

struct MnistProt_InferenceInput_table { uint8_t unused__; };

static inline size_t MnistProt_InferenceInput_vec_len(MnistProt_InferenceInput_vec_t vec)
__flatbuffers_vec_len(vec)
static inline MnistProt_InferenceInput_table_t MnistProt_InferenceInput_vec_at(MnistProt_InferenceInput_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(MnistProt_InferenceInput_table_t, vec, i, 0)
__flatbuffers_table_as_root(MnistProt_InferenceInput)

__flatbuffers_define_vector_field(0, MnistProt_InferenceInput, digit, flatbuffers_float_vec_t, 0)

struct MnistProt_InferenceOutput_table { uint8_t unused__; };

static inline size_t MnistProt_InferenceOutput_vec_len(MnistProt_InferenceOutput_vec_t vec)
__flatbuffers_vec_len(vec)
static inline MnistProt_InferenceOutput_table_t MnistProt_InferenceOutput_vec_at(MnistProt_InferenceOutput_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(MnistProt_InferenceOutput_table_t, vec, i, 0)
__flatbuffers_table_as_root(MnistProt_InferenceOutput)

__flatbuffers_define_vector_field(0, MnistProt_InferenceOutput, output_f, flatbuffers_float_vec_t, 0)
__flatbuffers_define_scalar_field(1, MnistProt_InferenceOutput, output_n, flatbuffers_uint8, uint8_t, UINT8_C(0))
__flatbuffers_define_scalar_field(2, MnistProt_InferenceOutput, timer_ms, flatbuffers_float, float, 0.000000f)

struct MnistProt_Commands_table { uint8_t unused__; };

static inline size_t MnistProt_Commands_vec_len(MnistProt_Commands_vec_t vec)
__flatbuffers_vec_len(vec)
static inline MnistProt_Commands_table_t MnistProt_Commands_vec_at(MnistProt_Commands_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(MnistProt_Commands_table_t, vec, i, 0)
__flatbuffers_table_as_root(MnistProt_Commands)

__flatbuffers_define_scalar_field(0, MnistProt_Commands, cmd, MnistProt_Command, MnistProt_Command_enum_t, INT8_C(0))
__flatbuffers_define_table_field(1, MnistProt_Commands, stats, MnistProt_Stats_table_t, 0)
__flatbuffers_define_table_field(2, MnistProt_Commands, input, MnistProt_InferenceInput_table_t, 0)
__flatbuffers_define_table_field(3, MnistProt_Commands, ouput, MnistProt_InferenceOutput_table_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* SCHEMA_READER_H */
